package com.hmvsoluciones.saas.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SuscripcionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSuscripcionAllPropertiesEquals(Suscripcion expected, Suscripcion actual) {
        assertSuscripcionAutoGeneratedPropertiesEquals(expected, actual);
        assertSuscripcionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSuscripcionAllUpdatablePropertiesEquals(Suscripcion expected, Suscripcion actual) {
        assertSuscripcionUpdatableFieldsEquals(expected, actual);
        assertSuscripcionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSuscripcionAutoGeneratedPropertiesEquals(Suscripcion expected, Suscripcion actual) {
        assertThat(actual)
            .as("Verify Suscripcion auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSuscripcionUpdatableFieldsEquals(Suscripcion expected, Suscripcion actual) {
        assertThat(actual)
            .as("Verify Suscripcion relevant properties")
            .satisfies(a -> assertThat(a.getFechaInicio()).as("check fechaInicio").isEqualTo(expected.getFechaInicio()))
            .satisfies(a -> assertThat(a.getFechaFin()).as("check fechaFin").isEqualTo(expected.getFechaFin()))
            .satisfies(a -> assertThat(a.getEstado()).as("check estado").isEqualTo(expected.getEstado()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSuscripcionUpdatableRelationshipsEquals(Suscripcion expected, Suscripcion actual) {
        assertThat(actual)
            .as("Verify Suscripcion relationships")
            .satisfies(a -> assertThat(a.getCliente()).as("check cliente").isEqualTo(expected.getCliente()))
            .satisfies(a -> assertThat(a.getPlan()).as("check plan").isEqualTo(expected.getPlan()));
    }
}
