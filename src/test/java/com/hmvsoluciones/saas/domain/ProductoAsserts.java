package com.hmvsoluciones.saas.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProductoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductoAllPropertiesEquals(Producto expected, Producto actual) {
        assertProductoAutoGeneratedPropertiesEquals(expected, actual);
        assertProductoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductoAllUpdatablePropertiesEquals(Producto expected, Producto actual) {
        assertProductoUpdatableFieldsEquals(expected, actual);
        assertProductoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductoAutoGeneratedPropertiesEquals(Producto expected, Producto actual) {
        assertThat(actual)
            .as("Verify Producto auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductoUpdatableFieldsEquals(Producto expected, Producto actual) {
        assertThat(actual)
            .as("Verify Producto relevant properties")
            .satisfies(a -> assertThat(a.getNombre()).as("check nombre").isEqualTo(expected.getNombre()))
            .satisfies(a -> assertThat(a.getDescripcion()).as("check descripcion").isEqualTo(expected.getDescripcion()))
            .satisfies(a -> assertThat(a.getActivo()).as("check activo").isEqualTo(expected.getActivo()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductoUpdatableRelationshipsEquals(Producto expected, Producto actual) {
        assertThat(actual)
            .as("Verify Producto relationships")
            .satisfies(a -> assertThat(a.getTipoProducto()).as("check tipoProducto").isEqualTo(expected.getTipoProducto()));
    }
}
